{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/rongalivamsi/Desktop/ngo-A/src/components/common/navbar/Navbar.jsx"],"sourcesContent":["// import Link from \"next/link\";\n// import Image from \"next/image\";\n// import navLinks from \"@/data/navbar\";\n\n// const Navbar = () => {\n//   return (\n//     <div className=\"z-[1000] fixed inset-x-2 top-2 inset-x-6 h-14 bg-white border-gray-200 rounded-full shadow-lg transition-all duration-700 border sm:top-4\">\n//       <header className=\"absolute top-1/2 w-full -translate-y-1/2\">\n//         <nav className=\"flex items-center justify-between p-4 size-full\">\n//           {/* Logo and title container */}\n\n//           <div className=\"flex items-center gap-7 h-full w-[7.5rem]\">\n//             <Link href=\"/\">\n//               <Image src=\"/svg/AVASA.svg\" alt=\"logo\" width={52} height={52} />\n//             </Link>\n//           </div>\n//           {/* Header title */}\n//           <div className=\"text-[20px] text-black font-[600]\">\n//             Avasa Foundation\n//           </div>\n\n//           {/* Navigation links */}\n//           <div className=\"flex items-center gap-5 ml-105 font-black\">\n//             {navLinks.middle.map((link) => (\n//               <div key={link.id} className=\"relative group\">\n//                 <Link href={link.url}>\n//                   <p className=\"relative block w-fit text-black text-base font-medium after:block after:content-[''] after:absolute after:h-[3px] after:bg-pink-400 after:w-full after:scale-x-0 hover:after:scale-x-100 after:transition-transform after:duration-300 after:origin-left\">\n//                     {link.label}\n//                   </p>\n//                 </Link>\n\n//                 {link.dialog && (\n//                   <div className=\"z-50 absolute top-full left-0 hidden flex-col mt-1 w-40 bg-white border-gray-200 rounded-lg shadow-md border group-hover:flex\">\n//                     {link.dialog.map((el) => (\n//                       <Link href={el.path} key={el.id}>\n//                         <p className=\"px-4 py-2 text-black cursor-pointer hover:bg-gray-100\">\n//                           {el.title}\n//                         </p>\n//                       </Link>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//           </div>\n\n//           {/* Donate button */}\n//           <div className=\"flex items-center gap-4\">\n//             <button className=\"overflow-hidden relative px-4 py-2 text-black font-medium bg-gradient-to-r from-pink-400 via-pink-300 to-pink-500 rounded-full transition-all duration-300 hover:shadow-[0_0_60px_rgba(236,72,153,0.6),0_0_100px_rgba(236,72,153,0.4),0_0_140px_rgba(236,72,153,0.2)] hover:scale-110 before:absolute before:inset-0 before:bg-gradient-to-r before:from-pink-300 before:via-pink-200 before:to-pink-400 before:opacity-0 hover:before:opacity-100 before:transition-opacity before:duration-300 before:animate-pulse after:absolute after:inset-0 after:bg-gradient-to-r after:from-pink-500 after:via-pink-400 after:to-pink-600 after:opacity-0 hover:after:opacity-30 after:transition-opacity after:duration-300\">\n//               <span className=\"z-10 relative\">Donate</span>\n//             </button>\n//           </div>\n//         </nav>\n//       </header>\n//     </div>\n//   );\n// };\n\n// export default Navbar;\n\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\n\n// Sample navigation structure\nconst navLinks = [\n  { name: \"About\", path: \"\" },\n  {\n    name: \"Our Work\",\n    dropdown: [\n      { name: \"Volunteering\", path: \"/\" },\n      { name: \"Youth Corner\", path: \"/\" },\n      { name: \"Internship\", path: \"/\" },\n    ],\n  },\n  { name: \"Events\", path: \"/\" },\n  {\n    name: \"Contact Us\",\n    dropdown: [\n      { name: \"Get in touch\", path: \"/\" },\n      { name: \"FAQs\", path: \"/services/app\" },\n    ],\n  },\n];\n\nconst Navbar = () => {\n  const [dropdownOpenIndex, setDropdownOpenIndex] = useState(null);\n\n  return (\n    <nav className=\"z-50 fixed top-4 left-0 right-0 flex justify-center\">\n      <div className=\"flex justify-between items-center px-8 py-3 w-3/4 bg-white rounded-full shadow-lg\">\n        <div className=\"text-xl font-bold text-blue-600\">MySite</div>\n\n        <ul className=\"flex items-center space-x-6\">\n          {navLinks.map((link, index) => (\n            <li key={index} className=\"relative group\">\n              {!link.dropdown ? (\n                <Link\n                  href={link.path}\n                  className=\"text-gray-700 font-medium hover:text-blue-600\"\n                >\n                  {link.name}\n                </Link>\n              ) : (\n                <>\n                  <button\n                    onClick={() =>\n                      setDropdownOpenIndex(\n                        dropdownOpenIndex === index ? null : index\n                      )\n                    }\n                    className=\"text-gray-700 font-medium hover:text-blue-600\"\n                  >\n                    {link.name} â–¼\n                  </button>\n                  {/* Dropdown menu */}\n                  <ul\n                    className={`absolute top-full left-0 mt-2 bg-white border rounded-md shadow-md w-44 py-2 ${\n                      dropdownOpenIndex === index ? \"block\" : \"hidden\"\n                    }`}\n                  >\n                    {link.dropdown.map((item, i) => (\n                      <li key={i}>\n                        <Link\n                          href={item.path}\n                          className=\"block px-4 py-2 text-gray-600 hover:bg-blue-50 hover:text-blue-600\"\n                        >\n                          {item.name}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,kCAAkC;AAClC,wCAAwC;AAExC,yBAAyB;AACzB,aAAa;AACb,kKAAkK;AAClK,sEAAsE;AACtE,4EAA4E;AAC5E,6CAA6C;AAE7C,wEAAwE;AACxE,8BAA8B;AAC9B,iFAAiF;AACjF,sBAAsB;AACtB,mBAAmB;AACnB,iCAAiC;AACjC,gEAAgE;AAChE,+BAA+B;AAC/B,mBAAmB;AAEnB,qCAAqC;AACrC,wEAAwE;AACxE,+CAA+C;AAC/C,+DAA+D;AAC/D,yCAAyC;AACzC,6RAA6R;AAC7R,mCAAmC;AACnC,yBAAyB;AACzB,0BAA0B;AAE1B,oCAAoC;AACpC,oKAAoK;AACpK,iDAAiD;AACjD,0DAA0D;AAC1D,gGAAgG;AAChG,uCAAuC;AACvC,+BAA+B;AAC/B,gCAAgC;AAChC,0BAA0B;AAC1B,2BAA2B;AAC3B,qBAAqB;AACrB,uBAAuB;AACvB,kBAAkB;AAClB,mBAAmB;AAEnB,kCAAkC;AAClC,sDAAsD;AACtD,ytBAAytB;AACztB,8DAA8D;AAC9D,wBAAwB;AACxB,mBAAmB;AACnB,iBAAiB;AACjB,kBAAkB;AAClB,aAAa;AACb,OAAO;AACP,KAAK;AAEL,yBAAyB;;;;;AAGzB;AACA;AAHA;;;;AAKA,8BAA8B;AAC9B,MAAM,WAAW;IACf;QAAE,MAAM;QAAS,MAAM;IAAG;IAC1B;QACE,MAAM;QACN,UAAU;YACR;gBAAE,MAAM;gBAAgB,MAAM;YAAI;YAClC;gBAAE,MAAM;gBAAgB,MAAM;YAAI;YAClC;gBAAE,MAAM;gBAAc,MAAM;YAAI;SACjC;IACH;IACA;QAAE,MAAM;QAAU,MAAM;IAAI;IAC5B;QACE,MAAM;QACN,UAAU;YACR;gBAAE,MAAM;gBAAgB,MAAM;YAAI;YAClC;gBAAE,MAAM;gBAAQ,MAAM;YAAgB;SACvC;IACH;CACD;AAED,MAAM,SAAS;IACb,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BAAkC;;;;;;8BAEjD,8OAAC;oBAAG,WAAU;8BACX,SAAS,GAAG,CAAC,CAAC,MAAM,sBACnB,8OAAC;4BAAe,WAAU;sCACvB,CAAC,KAAK,QAAQ,iBACb,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAM,KAAK,IAAI;gCACf,WAAU;0CAET,KAAK,IAAI;;;;;qDAGZ;;kDACE,8OAAC;wCACC,SAAS,IACP,qBACE,sBAAsB,QAAQ,OAAO;wCAGzC,WAAU;;4CAET,KAAK,IAAI;4CAAC;;;;;;;kDAGb,8OAAC;wCACC,WAAW,CAAC,6EAA6E,EACvF,sBAAsB,QAAQ,UAAU,UACxC;kDAED,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,kBACxB,8OAAC;0DACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oDACH,MAAM,KAAK,IAAI;oDACf,WAAU;8DAET,KAAK,IAAI;;;;;;+CALL;;;;;;;;;;;;2BA3BV;;;;;;;;;;;;;;;;;;;;;AA6CrB;uCAEe","debugId":null}}]
}