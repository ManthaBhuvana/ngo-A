/* [project]/src/components/utils/roundedpages/ThreeDCarousel.css [app-client] (css) */
:root {
  --carousel-transition-duration: .25s;
  --carousel-transition-ease: ease-out;
  --carousel-bg-color-rgb: 0, 0, 0;
  --carousel-shadow-color-rgb: 128, 128, 128;
  --carousel-item-width: 11.5rem;
  --carousel-item-height: 17.5rem;
  --carousel-item-hover-effect: 1.075;
  --carousel-item-reflection-blur: .25rem;
  --carousel-item-empty-color-rgb: 255, 255, 255;
  --carousel-item-glow-color-rgb: 255, 255, 255;
  --carousel-item-glow-size: 5rem;
  --carousel-diameter: 50rem;
  --carousel-3d-perspective: 1000px;
  --carousel-3d-perspective-origin: 50% 20%;
  --carousel-control-button-width: 1.25rem;
  --carousel-control-button-height: 4rem;
  --carousel-control-color-rgb: 255, 255, 255;
  --carousel-animation-duration: 25s;
  --carousel-animation-play-state: running;
  --carousel-direction-animation-play-state: paused;
}

*, :before, :after {
  box-sizing: border-box;
  border: 0;
  margin: 0;
  padding: 0;
}

:focus {
  outline: none;
}

a {
  -webkit-tap-highlight-color: #0000;
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -khtml-user-select: none;
}

body {
  background-color: rgb(var(--carousel-bg-color-rgb));
  justify-content: center;
  align-items: center;
  width: 100vw;
  min-width: 100vw;
  height: 100vh;
  min-height: 100vh;
  display: flex;
  overflow: hidden;
}

.carousel {
  --_diameter: var(--carousel-diameter);
  --_radius: calc(var(--_diameter) / 2);
  --_item-width: var(--carousel-item-width);
  --_item-height: var(--carousel-item-height);
  perspective: var(--carousel-3d-perspective);
  perspective-origin: var(--carousel-3d-perspective-origin);
  width: var(--_diameter);
  height: var(--_diameter);
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  display: flex;
  position: relative;
}

@media only screen and (width <= 48rem) {
  .carousel {
    --_diameter: calc(var(--carousel-diameter) * .75);
    --_item-width: calc(var(--carousel-item-width) * .75);
    --_item-height: calc(var(--carousel-item-height) * .75);
  }
}

@media only screen and (width <= 32rem) {
  .carousel {
    --_diameter: calc(var(--carousel-diameter) * .6);
    --_item-width: calc(var(--carousel-item-width) * .6);
    --_item-height: calc(var(--carousel-item-height) * .6);
  }
}

@media only screen and (width <= 16rem) {
  .carousel {
    --_diameter: calc(var(--carousel-diameter) * .25);
    --_item-width: calc(var(--carousel-item-width) * .25);
    --_item-height: calc(var(--carousel-item-height) * .25);
  }
}

.carousel .carousel-control-button {
  --_width: var(--carousel-control-button-width);
  --_height: var(--carousel-control-button-height);
  z-index: 1;
  width: var(--_width);
  height: var(--_height);
  background-color: rgb(var(--carousel-control-color-rgb));
  opacity: .2;
  transition: opacity var(--carousel-transition-duration) var(--carousel-transition-ease);
  position: absolute;
}

.carousel .carousel-control-button:hover {
  opacity: .4;
}

.carousel .carousel-control-button:has(input:checked) {
  opacity: .8;
}

.carousel .carousel-control-button input {
  -webkit-appearance: none;
  appearance: none;
  opacity: 0;
  cursor: pointer;
  width: 100%;
  height: 100%;
}

.carousel .carousel-control-button.left {
  clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
  top: calc(var(--_radius)  - var(--_height) / 2);
  left: 0;
}

.carousel:has(.carousel-control-button.left input:checked) {
  --carousel-direction-animation-play-state: running;
}

.carousel .carousel-control-button.right {
  clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
  top: calc(var(--_radius)  - var(--_height) / 2);
  right: 0;
}

.carousel:has(.carousel-control-button.right input:checked) {
  --carousel-direction-animation-play-state: paused;
}

.carousel .carousel-rotation-direction {
  --_direction-animation-play-state: var(--carousel-direction-animation-play-state);
  --_z: calc(var(--_radius) * -1);
  transform: translateZ(var(--_z));
  transform-style: preserve-3d;
  animation: carousel-rotation-reverse calc(var(--carousel-animation-duration) / 2) reverse linear infinite var(--_direction-animation-play-state);
  transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
}

@keyframes carousel-rotation-reverse {
  from {
    transform: translateZ(var(--_z)) rotateY(0deg);
  }

  to {
    transform: translateZ(var(--_z)) rotateY(360deg);
  }
}

@keyframes carousel-rotation-normal {
  from {
    transform: rotateY(0);
  }

  to {
    transform: rotateY(360deg);
  }
}

.carousel .carousel-item-wrapper {
  transform-style: inherit;
  width: inherit;
  height: inherit;
  animation: carousel-rotation-normal var(--carousel-animation-duration) normal linear infinite var(--carousel-animation-play-state);
  transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
  list-style-type: none;
  position: relative;
}

.carousel .carousel-rotation-direction:has(.carousel-item:hover) {
  --carousel-animation-play-state: paused;
  --_direction-animation-play-state: paused;
}

.carousel .carousel-item {
  --_width: var(--_item-width);
  --_height: var(--_item-height);
  --_rotation: calc(360 / var(--_num-elements) * var(--_index) * 1deg);
  left: calc(var(--_radius)  - var(--_item-width) / 2);
  top: calc(var(--_radius)  - var(--_item-height) / 2);
  transform: rotateY(var(--_rotation)) translateZ(var(--_radius));
  transform-style: inherit;
  width: var(--_width);
  height: var(--_height);
  transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
  box-shadow: 0 0 var(--carousel-item-glow-size) transparent;
  position: absolute;
}

.carousel .carousel-item:hover {
  box-shadow: 0 0 var(--carousel-item-glow-size) rgb(var(--carousel-item-glow-color-rgb));
  transform: rotateY(var(--_rotation)) translateZ(calc(var(--_radius) * var(--carousel-item-hover-effect)));
}

.carousel .carousel-item a {
  width: inherit;
  height: inherit;
  text-indent: -9999px;
  background-color: rgba(var(--carousel-item-empty-color-rgb), .5);
  background-image: var(--_image-url);
  transition: filter var(--carousel-transition-duration) var(--carousel-transition-ease);
  filter: grayscale();
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
}

.carousel .carousel-item:hover a {
  filter: grayscale(0%);
}

.carousel .carousel-item:before {
  content: "";
  width: inherit;
  height: inherit;
  background-color: rgba(var(--carousel-item-empty-color-rgb), .5);
  background-image: linear-gradient(to top, rgba(var(--carousel-bg-color-rgb), .25) 0%, rgba(var(--carousel-bg-color-rgb), 1) 75%), var(--_image-url);
  pointer-events: none;
  filter: blur(var(--carousel-item-reflection-blur)) grayscale(100%);
  transition: filter var(--carousel-transition-duration) var(--carousel-transition-ease);
  transform-style: inherit;
  transform-origin: bottom;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: absolute;
  transform: rotateX(90deg)rotateZ(180deg)rotateY(180deg);
}

.carousel .carousel-item:hover:before {
  filter: blur(var(--carousel-item-reflection-blur)) grayscale(0%);
}

.carousel .carousel-ground {
  --_width: var(--_diameter);
  --_height: var(--_diameter);
  --_rotation: 90deg;
  left: calc(var(--_radius)  - var(--_width) / 2);
  top: calc(var(--_radius)  - var(--_height) / 2);
  transform: rotateX(var(--_rotation)) translateZ(calc(var(--_item-height) / -2));
  width: var(--_width);
  height: var(--_height);
  background: radial-gradient(rgba(var(--carousel-shadow-color-rgb), .75) 15%, rgba(var(--carousel-bg-color-rgb), 0) 60%);
  opacity: .5;
  transition: opacity var(--carousel-transition-duration) var(--carousel-transition-ease);
  border-radius: 50%;
  position: absolute;
}

.carousel .carousel-item-wrapper:has(.carousel-item:hover) .carousel-ground {
  opacity: .75;
}


/*# sourceMappingURL=src_components_utils_roundedpages_ThreeDCarousel_c9a21bce.css.map*/